---
layout: default
title: 'JBoss Stacks'
---
- page.javascripts = [ "#{site.base_url}/javascripts/jquery-datatables.js", "https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.21/jquery-ui.js" ] 

:markdown
  JBoss Stacks allows you to easily choose and use a stack of JBoss runtimes, frameworks and tools. 

  The JBoss BOMs project allows you to easily  use your stack of choice. 

  The JDF plugin allows you to easily add stacks to your project using Forge.

  ------------------------------------------

.stacks
 
  %table.table#runtimes
    %thead
      %tr
        %th Release
        %th Suggested Runtime
        %th Suggested BOM
        %th Suggested Archetype
        %th Download
        %th.hidden Runtime ID
    - site.stacks.minorReleases.each do |mr|
      %tr
        %td 
          %strong  #{mr.name} #{mr.version}
        %td #{mr.recommendedRuntime.name}
        %td 
          %a{:href => "../boms/##{mr.recommendedRuntime.defaultBom.name}"} #{mr.recommendedRuntime.defaultBom.name}
        %td #{mr.recommendedRuntime.defaultArchetype.name}
        %td.centered 
          %a{:href => "#{mr.recommendedRuntime.url}"}
            %img{:src=>"#{site.base_url}/images/glyphicons/glyphicons_181_download_alt.png"}
        %td.hidden #{mr.object_id}

    -# Create BOM Tables for each Runtime 

  .hidden
    - site.stacks.minorReleases.each do |mr|
      %table{:id => "boms#{mr.object_id}", :class => "table table-bordered"}
        %thead
          %th Available Boms for #{mr.recommendedRuntime.name}
          %th Recommended Bom version
        - mr.recommendedRuntime.boms.each do |bom|
          %tr
            %td 
              %a{:href=>"../boms/##{bom.name}"} #{bom.name}
            %td 
              %a{:href=>"../boms/##{bom.name}"} #{bom.recommendedVersion}

      %table{:id=>"archetypes#{mr.object_id}", :class => "table table-bordered"}
        %thead
          %th Available Archetypes for #{mr.recommendedRuntime.name}
          %th Recommended Archetype version
        - mr.recommendedRuntime.archetypes.each do |archetype|
          %tr
            %td #{archetype.name}
            %td #{archetype.recommendedVersion}

:javascript

   /* Formating function for row details */
  function fnFormatDetails ( oTable, nTr )
  {
      var aData = oTable.fnGetData( nTr );
      var sTableBoms =  document.getElementById('boms'+ aData[6]).outerHTML;
      var sTableArchetypes =  document.getElementById('archetypes'+ aData[6]).outerHTML;
      return sTableBoms + sTableArchetypes;
  }
   
  $(document).ready(function() {
      /*
       * Insert a 'details' column to the table
       */
      var nCloneTh = document.createElement( 'th' );
      var nCloneTd = document.createElement( 'td' );
      nCloneTd.innerHTML = '<img src="#{site.base_url}/images/details_open.png">';
      nCloneTd.className = "centered";
       
      $('#runtimes thead tr').each( function () {
          this.insertBefore( nCloneTh, this.childNodes[0] );
      } );
       
      $('#runtimes tbody tr').each( function () {
          this.insertBefore(  nCloneTd.cloneNode( true ), this.childNodes[0] );
      } );
       
      /*
      * Initialse DataTables, with no sorting on the 'details' column
      */
      var oTable = $('#runtimes').dataTable(  {
        "bPaginate": false,
        "bLengthChange": false,
        "bFilter": false,
        "bSort": false,
        "bInfo": false,
        "bAutoWidth": false
      });
       
      /* Add event listener for opening and closing details
      * Note that the indicator for showing which row is open is not controlled by DataTables,
      * rather it is done here
      */
      $('#runtimes tbody td img').live('click', function () {
          var nTr = $(this).parents('tr')[0];
          if ( oTable.fnIsOpen(nTr) )
          {
              /* This row is already open - close it */
              this.src = "#{site.base_url}/images/details_open.png";
              oTable.fnClose( nTr );
          }
          else
          {
              /* Open this row */
              this.src = "#{site.base_url}/images/details_close.png";
              oTable.fnOpen( nTr, fnFormatDetails(oTable, nTr), 'details' );
          }
      } );
  } );  

 
